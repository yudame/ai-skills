name: Test MCP Servers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every 6 hours to monitor production health
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-creative-juices:
    name: Test Creative Juices MCP Server
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt

    - name: Run tests with pytest
      run: |
        pytest tests/test_creative_juices.py -v --tb=short
      continue-on-error: false

    - name: Run tests with detailed output (on failure)
      if: failure()
      run: |
        pytest tests/test_creative_juices.py -v --tb=long -s

    - name: Generate test report
      if: always()
      run: |
        pytest tests/test_creative_juices.py --junit-xml=test-results.xml || true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: test-results.xml

    - name: Notify on failure (scheduled runs only)
      if: failure() && github.event_name == 'schedule'
      run: |
        echo "::warning::Production MCP server tests failed! Check https://ai.yuda.me for status."

  health-summary:
    name: Generate Health Summary
    runs-on: ubuntu-latest
    needs: test-creative-juices
    if: always()

    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test-creative-juices.result }}" = "success" ]; then
          echo "✅ All MCP servers are healthy"
        else
          echo "❌ Some MCP server tests failed"
          exit 1
        fi
